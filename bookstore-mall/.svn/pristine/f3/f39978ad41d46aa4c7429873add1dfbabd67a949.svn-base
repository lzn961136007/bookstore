package com.bs.mall.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.bs.mall.pojo.User;
import com.bs.mall.service.UserService;
import com.bs.mall.util.JsonData;
import com.bs.mall.util.SendEmail;

@RestController
public class UserController {
	@Autowired
	private UserService userService;
	//登陆操作
	@GetMapping("{account}/{password}/findUser")
	public User findUSer(@PathVariable("account")String account,@PathVariable("password")String password){
		User user = userService.getSelectByUser(account, password);
		if(user.getEmail().equals(account)&&user.getPassword().equals(password)){
			return user;
		}
		return null;	
	}
	
	
	//判断邮箱和用户名是否被注册
	@GetMapping("{email}/searchEmail")
	public JsonData searchPhone(@PathVariable("email")String email) throws Exception{
		User user = userService.getUserByEmail(email);
		System.out.println("获取的User为："+user);
		if(user==null){
			try {
				SendEmail.send(email);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return new JsonData(null, null, "邮箱未注册", true);
		}
			return new JsonData(null, null, "邮箱已注册", false);
	
	
	}
	
	@GetMapping("{username}/searchName")
	public JsonData searchName(@PathVariable("username")String username){
		User user = userService.getUserByEmail(username);
		if(user == null){
			return new JsonData(null, null, "用户名未注册", false);
		}else{
			return new JsonData(null, null, "用户名已注册", true);
		}
	}
	//注册数据增添到数据库
	@GetMapping("{email}/{username}/{password}/searchUser")
	public JsonData searchUser(@PathVariable("email")String email,@PathVariable("username")String username,@PathVariable("password")String password){
		Boolean status = userService.addUser(email, username, password);
		if(status==true){
			return new JsonData(null, null, "添加成功", true);
		}else{
		return new JsonData(null, null, "注册失败", false);
		}
	}
	
	@GetMapping("{email}/{active}/updateStatus")
	public Integer updateStatus(@PathVariable("email")String email,@PathVariable("active")String active){
		try {
			User user = userService.getUserByEmail(email);
			System.out.println("User:"+user);
			user.setActive("1");
			return userService.getUpdateByStatus(user);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
		
		 
	}
	
	//查询邮箱是否注册
	@GetMapping("{email}/updatePhone")
	public JsonData updatePhone(@PathVariable("email")String email){
		User user = userService.getUserByPhone(email);
		if(user != null){
			return new JsonData(null, null, "存在邮箱", true);
		}else{
			return new JsonData(null, null, "邮箱未注册", false);
		}
		
	}
	//修改密码
	@GetMapping("{email}/{newPassword}/updateUser")
	public JsonData updateUser(@PathVariable("email")String email,@PathVariable("newPassword")String newPassword){
		Boolean status = userService.getUpdateByUser(email,newPassword);
			return new JsonData(null, null, "修改成功", status);
		
	}
	
	//用户领券
	@GetMapping("newUserGetCoupon/{userId}/{couponId}")
	public JsonData userGetCoupon(@PathVariable("userId") Integer userId,@PathVariable("couponId") Integer couponId){
		Boolean boo1 = userService.getNewUser(userId);
		if(boo1){
			return new JsonData(null, null, "您不是新用户！", boo1);
		}
		Boolean boo2 = userService.getGetCoupon(userId, couponId);
		if(boo2){
			return new JsonData(null, null, "您已经领取过了！", boo2);
		}
		Boolean getCoupon = userService.addUserGetCoupon(userId, couponId); 
		
		if(getCoupon){
			return new JsonData(null, null, "领取成功！", getCoupon);
		}else{
			return new JsonData(null, null, "领取失败！", getCoupon);
		}
	}
	@GetMapping("getCoupon/{userId}/{couponId}")
	public JsonData getCoupon(@PathVariable("userId") Integer userId,@PathVariable("couponId") Integer couponId){
		Boolean boolean1 = userService.getGetCoupon(userId, couponId);
		if(boolean1){
			return new JsonData(null, null, "您已经领取过了！", boolean1);
		}
		return userService.addCouponInfo(userId, couponId);
	}

	/**
	 * 用户修改个人信息
	 * @param request
	 * @param response
	 * @param user
	 * @return
	 */
	/*@RequestMapping(value="/editorUserInfomation")
	public @ResponseBody boolean editorUserInfomation(HttpServletRequest request,HttpServletResponse response,@RequestBody  User user) {
			System.out.println(user);
		return userService.editorUserInfomation(user);	
	}*/
}
